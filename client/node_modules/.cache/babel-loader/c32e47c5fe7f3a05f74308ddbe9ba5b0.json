{"ast":null,"code":"var _jsxFileName = \"/Users/hind/Desktop/final/client/src/view/chat.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport io from \"socket.io-client\";\nimport { useImmer } from \"use-immer\";\nimport { FormControl, InputGroup, Button, Container, Row, Col } from \"react-bootstrap\"; // import { Footer, FooterSection, FooterLinkList } from \"react-mdl\";\n\nimport { SERVER_URL } from \"../config\";\nimport { setAllChat, setNewChat } from \"../store/chat\";\n\nconst Chat = ({\n  users,\n  manager,\n  chats,\n  setAllChat,\n  setNewChat\n}) => {\n  const [user, setUsers] = React.useState(\"\");\n  const [userName, setUserName] = React.useState(\"\");\n  const [chatMessage, setChatMessage] = React.useState(\"\");\n  const [messages, setMessages] = useImmer([]);\n  const [socket, setSocket] = React.useState(io(\"http://127.0.0.1:5000\")); // React.useEffect(() => {\n  //   if (manager.role === 1) {\n  //     axios\n  //       .post(SERVER_URL + \"users/allusers\", { id: manager.userId })\n  //       .then(res => res.data)\n  //       .then(datas => {\n  //         console.log(datas);\n  //         setUsers(datas);\n  //       });\n  //   }\n  // }, []);\n\n  React.useEffect(() => {\n    console.log(\"chat data fetching\");\n    socket.on(\"Output Chat Message\", message => {\n      console.log(message);\n      setNewChat(message); // setMessages(draft => {draft.push(message)});\n      // console.log(messages);\n      // console.log(chats);\n    });\n  }, []);\n\n  const submit = () => {\n    let userId = manager.userId; // let userName = this.props.user.userData.name;\n    // let userImage = this.props.user.userData.image;\n\n    let nowTime = new Date();\n    let type = \"Text\";\n    console.log(user);\n    socket.emit(\"Input Chat Message\", {\n      chatMessage,\n      userId,\n      user,\n      // userName,\n      // userImage,\n      nowTime,\n      type\n    });\n    setChatMessage(\"\");\n  };\n\n  const chatUser = clientId => {\n    setUsers(clientId);\n    let data = {\n      server: manager.userId,\n      client: clientId\n    };\n    console.log(data);\n    socket.emit(\"CreateRoom\", data);\n    axios.post(SERVER_URL + \"chat/getChats\", data).then(res => res.data).then(msgs => {\n      console.log(msgs);\n      setAllChat(msgs);\n      console.log(chats);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 3,\n    style: {\n      borderRight: \"2px solid black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      textAlign: \"center\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, \"Users\"), users.map(user => {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      key: Math.random(),\n      style: {\n        margin: \"5px\",\n        cursor: \"pointer\",\n        backgroundColor: \"#aaa\",\n        textAlign: \"center\"\n      },\n      onClick: () => {\n        chatUser(user._id);\n        setUserName(user.firstName);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, user.firstName);\n  })), /*#__PURE__*/React.createElement(Col, {\n    sm: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      margin: 0,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Chat Room\"), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      height: \"450px\",\n      overflowY: \"scroll\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, chats.map(msg => {\n    let output = msg.sender === manager.userId ? \"You:\" + msg.message : userName + \":\" + msg.message;\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      key: Math.random(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 24\n      }\n    }, output);\n  })), /*#__PURE__*/React.createElement(Container, {\n    style: {\n      position: \"fixed\",\n      bottom: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    value: chatMessage,\n    placeholder: \"Enter your messages\",\n    \"aria-label\": \"Enter your messages\",\n    \"aria-describedby\": \"basic-addon2\",\n    onChange: e => setChatMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(InputGroup.Append, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    vaiant: \"primary\",\n    onClick: submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 21\n    }\n  }, \"Send\")))))))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    chats: state.chat.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAllChat: data => dispatch(setAllChat(data)),\n    setNewChat: data => dispatch(setNewChat(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);","map":{"version":3,"sources":["/Users/hind/Desktop/final/client/src/view/chat.jsx"],"names":["React","connect","axios","io","useImmer","FormControl","InputGroup","Button","Container","Row","Col","SERVER_URL","setAllChat","setNewChat","Chat","users","manager","chats","user","setUsers","useState","userName","setUserName","chatMessage","setChatMessage","messages","setMessages","socket","setSocket","useEffect","console","log","on","message","submit","userId","nowTime","Date","type","emit","chatUser","clientId","data","server","client","post","then","res","msgs","borderRight","textAlign","margin","map","Math","random","cursor","backgroundColor","_id","firstName","height","overflowY","msg","output","sender","position","bottom","width","e","target","value","mapStateToProps","state","chat","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport io from \"socket.io-client\";\r\nimport {useImmer} from \"use-immer\";\r\n\r\nimport {\r\n  FormControl,\r\n  InputGroup,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"react-bootstrap\";\r\n// import { Footer, FooterSection, FooterLinkList } from \"react-mdl\";\r\n\r\nimport { SERVER_URL } from \"../config\";\r\nimport { setAllChat, setNewChat} from \"../store/chat\";\r\n\r\nconst Chat = ({ users, manager, chats, setAllChat, setNewChat }) => {\r\n  const [user, setUsers] = React.useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [chatMessage, setChatMessage] = React.useState(\"\");\r\n  const [messages, setMessages] = useImmer([]);\r\n  const [socket, setSocket] = React.useState(io(\"http://127.0.0.1:5000\"));\r\n  // React.useEffect(() => {\r\n  //   if (manager.role === 1) {\r\n  //     axios\r\n  //       .post(SERVER_URL + \"users/allusers\", { id: manager.userId })\r\n  //       .then(res => res.data)\r\n  //       .then(datas => {\r\n  //         console.log(datas);\r\n  //         setUsers(datas);\r\n  //       });\r\n  //   }\r\n  // }, []);\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"chat data fetching\");\r\n    socket.on(\"Output Chat Message\", message => {\r\n      console.log(message);\r\n      setNewChat(message);\r\n      // setMessages(draft => {draft.push(message)});\r\n      // console.log(messages);\r\n      // console.log(chats);\r\n    });\r\n  }, []);\r\n  const submit = () => {\r\n    let userId = manager.userId;\r\n    // let userName = this.props.user.userData.name;\r\n    // let userImage = this.props.user.userData.image;\r\n    let nowTime = new Date();\r\n    let type = \"Text\";\r\n    console.log(user);\r\n    socket.emit(\"Input Chat Message\", {\r\n      chatMessage,\r\n      userId,\r\n      user,\r\n      // userName,\r\n      // userImage,\r\n      nowTime,\r\n      type\r\n    });\r\n    setChatMessage(\"\");\r\n  };\r\n\r\n  const chatUser = clientId => {\r\n    setUsers(clientId);\r\n    let data = {\r\n      server: manager.userId,\r\n      client: clientId\r\n    };\r\n    console.log(data);\r\n    socket.emit(\"CreateRoom\", data);\r\n    axios\r\n      .post(SERVER_URL + \"chat/getChats\", data)\r\n      .then(res => res.data)\r\n      .then(msgs => {\r\n        console.log(msgs);\r\n        setAllChat(msgs);\r\n        console.log(chats);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          <Col sm={3} style={{borderRight: \"2px solid black\"}}>\r\n            <h3 style={{ textAlign: \"center\", margin: 0 }}>Users</h3>\r\n            {users.map(user => {\r\n              return (\r\n                <h4\r\n                  key={Math.random()}\r\n                  style={{ margin: \"5px\", cursor: \"pointer\", backgroundColor: \"#aaa\", textAlign: \"center\" }}\r\n                  onClick={() => {chatUser(user._id); setUserName(user.firstName )}}\r\n                >\r\n                  {user.firstName }\r\n                </h4>\r\n              );\r\n            })}\r\n          </Col>\r\n          <Col sm={9}>\r\n            <h3 style={{ margin: 0, textAlign: \"center\" }}>Chat Room</h3>\r\n            <Container style={{ height: \"450px\", overflowY: \"scroll\" }}>\r\n              {chats.map(msg => {\r\n                let output = msg.sender === manager.userId? \"You:\" + msg.message: userName + \":\" + msg.message;\r\n                return <h4 key={Math.random()}>{output}</h4>;\r\n              })}\r\n            </Container>\r\n            <Container style={{ position: \"fixed\", bottom: 0 }}>\r\n              <Row style={{ width: \"70%\" }}>\r\n                <InputGroup className=\"mb-3\">\r\n                  <FormControl\r\n                    value={chatMessage}\r\n                    placeholder=\"Enter your messages\"\r\n                    aria-label=\"Enter your messages\"\r\n                    aria-describedby=\"basic-addon2\"\r\n                    onChange={e => setChatMessage(e.target.value)}\r\n                  />\r\n                  <InputGroup.Append>\r\n                    <Button vaiant=\"primary\" onClick={submit}>\r\n                      Send\r\n                    </Button>\r\n                  </InputGroup.Append>\r\n                </InputGroup>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    chats: state.chat.messages\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setAllChat: (data) => dispatch(setAllChat(data)),\r\n    setNewChat: (data) => dispatch(setNewChat(data))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"]},"metadata":{},"sourceType":"module"}